#___CONFIG1___

server {
  listen       80;
  server_name  localhost;
  charset utf-8;
  client_max_body_size 50m;
  
  location / {
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    set $proxy_pass_url ___PROXY_UPSTREAM_HOST___;
  
    # Nginx doesn't support nested If statements, so we
    # concatenate compound conditions on the $cors variable
    # and process later

    set $cors "X";

    # If request comes from allowed subdomain
    # (*.localhost) then we enable CORS
    #if ($http_origin ~* (http?://.*\.localhost(:[0-9]+)?$)) {
    if ($http_origin = '___ORIGIN___' ) {
       set $cors "1";
    }
    
    # OPTIONS indicates a CORS pre-flight request
    if ($request_method = 'OPTIONS') {
       set $cors "${cors}o";
    }
  
    # Append CORS headers to any request from 
    # allowed CORS domain, except OPTIONS
    if ($cors = "1") {
       add_header 'Access-Control-Allow-Origin' "$http_origin" always;
       add_header 'Access-Control-Allow-Credentials' 'true' always;
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
       add_header 'Access-Control-Expose-Headers' 'x-error-code,x-custom-data,x-error-message' always;
       proxy_pass  $proxy_pass_url;
    }
    
    # allow CORS directly for special path
    if ($request_uri ~ "___MANUAL_CORS_PATH___" ) {
       add_header 'Access-Control-Allow-Origin' "*";
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
       add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;
       proxy_pass  $proxy_pass_url;
    }
 
    # OPTIONS (pre-flight) request from allowed 
    # CORS domain. return response directly
    # Tell client that this pre-flight info is valid for 20 days
    if ($cors = "1o") {
       add_header 'Access-Control-Allow-Origin' "$http_origin";
       add_header 'Access-Control-Max-Age' 1728000;
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization,x-error-code,x-custom-data,x-error-message,X-ws-request-id';
       add_header Content-Length 0;
       add_header Content-Type text/plain;
       return 204;
    }
    
    proxy_pass  $proxy_pass_url;
    
  }
}
